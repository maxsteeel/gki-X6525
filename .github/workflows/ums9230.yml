# Nombre del workflow
name: Build Unisoc Kernel with AOSP Scripts (Corrected)

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Unisoc Kernel
    runs-on: ubuntu-22.04
    steps:
      # Paso 1: Instalar Dependencias
      - name: 1. Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends git bc bison build-essential curl flex g++-multilib gcc-multilib gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev

      # Paso 2: Preparar la estructura de directorios y clonar los repositorios
      - name: 2. Setup AOSP-like Workspace
        run: |
          mkdir -p kernel
          
          # CORRECCIÓN 1: Se clona el repositorio sin especificar una rama,
          # usando la rama por defecto ('ums9230') que tú indicaste.
          git clone https://codeberg.org/ums9230-mainline/linux.git kernel/common
          cd kernel/common && git checkout 219d54332a09e8d8741c1e1982f5eae56099de85 && cd ../..
          
          git clone https://android.googlesource.com/kernel/build -b master-kernel-build-2022 kernel/build
          
          echo "Workspace is ready."
          

      # Paso 3: Integrar KernelSU-Next
      - name: 3. Integrate KernelSU-Next
        run: |
          cd kernel/common
          git clone https://github.com/KernelSU-Next/KernelSU-Next.git KernelSU
          bash KernelSU/kernel/setup.sh
          echo "KernelSU-Next integrated."
          
      # Paso 4: Configurar y Compilar el Kernel con build.sh
      - name: 4. Configure and Build the Kernel
        run: |
          cd kernel/common
          
          # Creamos nuestro archivo de configuración personalizado
          cat <<EOF > build.config.unisoc
          # CORRECCIÓN 2: Se usa 'defconfig' como indicaste.
          DEFCONFIG=defconfig
          POST_DEFCONFIG_CMDS="scripts/config --enable KSU && scripts/config --enable KSU_SUSFS"
          LTO=thin
          EOF
          
          echo "Custom build config created."
          
          # Ejecutamos el script de compilación oficial de Google
          BUILD_CONFIG=build.config.unisoc ../build/build.sh
          
          echo "Kernel build finished."

      # Paso 5: Subir los artefactos de compilación
      - name: 5. Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Unisoc-AOSP-Build-Corrected
          path: |
            kernel/common/out/*
