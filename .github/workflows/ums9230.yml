# Nombre del workflow
name: Build Unisoc Kernel (Repo Method)

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Unisoc Kernel
    runs-on: buildjet-32vcpu-ubuntu-2204
    steps:
      # Pasos 1 y 2 (Sin cambios)
      - name: 1. Free Up Disk Space
        run: |
          echo "Cleaning up runner to free disk space..."
          sudo rm -rf /usr/share/dotnet /opt/ghc "/usr/local/share/boost" "$AGENT_TOOLSDİRECTORY"
          df -h
      - name: 2. Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends git bc build-essential curl g++-multilib gcc-multilib gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev
          mkdir -p ~/bin && curl -s https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo && chmod a+x ~/bin/repo && echo "$HOME/bin" >> $GITHUB_PATH
      # --- PASO 3: INICIALIZACIÓN CORRECTA DE REPO ---
      - name: 3. Sync Build Environment with Repo
        run: |
          mkdir -p kernel-build && cd kernel-build
          
          # LA SOLUCIÓN: Usamos repo como fue diseñado, apuntando a un repositorio de manifiesto real.
          # REEMPLAZA LA URL con la de tu repositorio de manifiesto.
          repo init -u https://github.com/maxsteeel/manifest/ -b main
          
          repo sync -c --no-tags --no-clone-bundle -j$(nproc --all)
          

      # Paso 4: Integrar KernelSU-Next
      - name: 4. Integrate KernelSU and Patch
        run: |
          cd kernel-build/common
          git clone https://github.com/rsuntk/KernelSU
          bash KernelSU/kernel/setup.sh
          echo "KernelSU integrated."

          curl https://raw.githubusercontent.com/maxsteeel/gki-X6525/refs/heads/main/forcemodulesload.patch > force_modules_load.patch
          patch -p1 < force_modules_load.patch
          echo "Patching successful"
          
      # Paso 5: Compilar
      - name: 5. Configure and Build the Kernel
        run: |
          cd kernel-build
          
          BUILD_CONFIG=common/build.config.gki_unisoc.aarch64 build/build.sh

      # Paso 6: Subir los artefactos
      - name: 6. Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Unisoc-Kernel-Repo-Build
          path: |
            kernel-build/out/android12-5.4/dist/Image
            kernel-build/out/android12-5.4/dist/*.ko
