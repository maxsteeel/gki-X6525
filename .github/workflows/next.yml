# Nombre del workflow
name: Build GKI Kernel with KernelSU-Next

# C贸mo se activa este workflow
on:
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-22.04
    steps:
      # Pasos 1-3 (Sin cambios)
      - name: 1. Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends git bc bison build-essential curl flex g++-multilib gcc-multilib gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev
      - name: 2. Setup Repo Tool
        run: |
          mkdir -p ~/bin && curl -s https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo && chmod a+x ~/bin/repo && echo "$HOME/bin" >> $GITHUB_PATH
      - name: 3. Download Kernel Source
        run: |
          mkdir gki_kernel && cd gki_kernel
          repo init -u https://android.googlesource.com/kernel/manifest -b common-android12-5.4-lts --no-repo-verify --depth 1
          
          repo sync -c --no-tags --no-clone-bundle -j$(nproc --all)
      # --- PASO MODIFICADO Y CORREGIDO ---
      # Paso 4: Integrar KernelSU-Next
      - name: 4. Integrate KernelSU-Next
        run: |
          cd gki_kernel
          # 1. Usamos el repositorio CORRECTO de KernelSU-Next y lo clonamos en una carpeta llamada 'KernelSU'
          git clone https://github.com/KernelSU-Next/KernelSU-Next.git
          
          git clone https://github.com/WildKernels/kernel_patches.git 
          cp kernel_patches/next/next_hooks.patch common
          cp kernel_patches/next/scope_min_manual_hooks_v1.4.patch common
          cp kernel_patches/next/syscall_hooks.patch common
          cp kernel_patches/next/susfs_fix_patches/v1.5.9/fix_core_hook.c.patch KernelSU-Next
          cp kernel_patches/next/susfs_fix_patches/v1.5.9/fix_kernel_compat.c.patch KernelSU-Next
          cp kernel_patches/next/susfs_fix_patches/v1.5.9/fix_sucompat.c.patch KernelSU-Next
          cd common
          echo "Patch #1:"
          (git apply next_hooks.patch) || true
          echo "Patch #2:"
          (git apply scope_min_manual_hooks_v1.4.patch) || true
          echo "Patch #3:"
          (git apply syscall_hooks.patch) || true
          
          cd ..
          bash KernelSU-Next/kernel/setup.sh

      
      # Paso 6: Crear Fragmento de Configuraci贸n GKI-Nativo
      - name: 6. Create GKI-Native Config
        run: |
          cd gki_kernel
          
          curl https://raw.githubusercontent.com/maxsteeel/gki-X6525/refs/heads/main/config_stock.txt >> common/arch/arm64/configs/fragment_defconfig
          cp common/android/abi_gki_aarch64_unisoc common/android/abi_gki_aarch64
          cat common/android/abi_gki_aarch64_transsion >> common/android/abi_gki_aarch64
          
      # Paso 7: Personalizar Versi贸n del Kernel
      - name: 7. Set Custom Kernel Version
        run: |
          sed -i 's/^echo "\$res"$/echo "-lts-Max-X6525-GKI-Next"/' gki_kernel/common/scripts/setlocalversion
          echo "Kernel version hardcoded to -lts-Max-X6525-GKI-Next"
      # Paso 8: Compilar el Kernel
      - name: 8. Build Kernel
        run: |
          cd gki_kernel
          
          cat <<EOF > common/build.config.unisoc
          . /home/runner/work/gki-X6525/gki-X6525/gki_kernel/common/build.config.aarch64
          BRANCH=android12-5.4
          KMI_GENERATION=9
          LLVM=1
          DEPMOD=depmod
          CLANG_PREBUILT_BIN=prebuilts-master/clang/host/linux-x86/clang-r416183b/bin
          BUILDTOOLS_PREBUILT_BIN=build/build-tools/path/linux-x86
          KCFLAGS="${KCFLAGS} -D__ANDROID_COMMON_KERNEL__"
          EXTRA_CMDS=''
          STOP_SHIP_TRACEPRINTK=1
          
          ABI_DEFINITION=android/abi_gki_aarch64.xml
          KMI_SYMBOL_LIST=android/abi_gki_aarch64
          ADDITIONAL_KMI_SYMBOL_LISTS="
          android/abi_gki_aarch64_unisoc
          android/abi_gki_aarch64_transsion
          "
          
          DEFCONFIG=fragment_defconfig
          
          KMI_ENFORCED=0
          TRIM_NONLISTED_KMI=0
          KMI_SYMBOL_LIST_STRICT_MODE=0
          IN_KERNEL_MODULES=1
          DO_NOT_STRIP_MODULES=1
          
          MODULES_ORDER=android/gki_aarch64_modules
          KERNEL_CMDLINE="cpuidle.off=1"
          
          LTO=thin
          EOF
          
          mkdir out && cd out && mkdir android12-5.4 && cd ..
          
          cp common/arch/arm64/configs/fragment_defconfig out/android12-5.4/.config
          
          common/scripts/kconfig/merge_config.sh -m common/arch/arm64/configs/gki_defconfig common/arch/arm64/configs/fragment_defconfig
          mv .config out/android12-5.4/.config
          while true; do echo "Build in progress - $(date)"; sleep 300; done &
          
          (make -C common O=../out/android12-5.4 LTO=thin olddefconfig) || true
          
          LTO=thin BUILD_CONFIG=common/build.config.unisoc DEFCONFIG=fragment_defconfig build/build.sh
      # Paso 9: Subir el artefacto de compilaci贸n
      - name: 9. Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: GKI-Build-Artifacts-5.4-Max-X6525-Next
          path: gki_kernel/out/android12-5.4/dist/
